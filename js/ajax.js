//****************************************************
//*********** GETë°©ì‹?ìœ¼ë¡œ ì „ì†¡í•˜ê¸°
//****************************************************
function httpRequest( target_url, functionReference) {

	try {
		if( window.XMLHttpRequest ) {	// FireFox(2005.11í˜„ìž¬ winìš©ìœ¼ë¡œ var 1.0.7), Mac OS X ì?˜ Safari 1.3, Opera 8.5ì—?ì„œ ë?™ìž‘
			http2Obj = new XMLHttpRequest();
		} else if( window.ActiveXObject) {	// IEì—?ì„œ ë?™ìž‘. IEì—?ëŠ” XMLHttpRequestì˜¤ë¸Œì ?íŠ¸ê°€ ì—†ë‹¤.
			http2Obj = new ActiveXObject( "Microsoft.XMLHTTP" );
		} else {
			http2Obj = false;
		}
	} catch( e ) {
		http2Obj = false;
	}
	if( !http2Obj ) {
		httpObjGenerateFail();
	}

	//timerId = setInterval( 'timeoutCheck()', 1000 );
	
	http2Obj.open( "GET", target_url, true );

	// onreadystatechange : ì˜¤ë¸Œì ?íŠ¸ì?˜ ìƒ?íƒœê°€ ë³€ê²½ë?˜ì˜€ì?„ ë•Œ fireë?œë‹¤.
	// ì¦‰ ì—¬ê¸°ì„œëŠ” httpObjì˜¤ë¸Œì ?íŠ¸ì?˜ ìƒ?íƒœê°€ ë³€ê²½ë?˜ì˜€ì?„ ë•Œ ì–´ëŠ? í•¨ìˆ˜ë¥¼ í˜¸ì¶œí•˜ê² ëŠ”ê°€ë¥¼ ì§€ì •.
	http2Obj.onreadystatechange = function() {

		// readyState : requestì?˜ ì²˜ë¦¬ìƒ?íƒœë¥¼ í‘œì‹œí•˜ëŠ” ê°’.
		// ì¦‰	0 : ë¯¸ì´ˆê¸°í™”ìƒ?íƒœ(ì˜¤ë¸Œì ?íŠ¸ëŠ” ìƒ?ì„±ë?˜ ìžˆì§€ë§Œ open methodëŠ” í˜¸ì¶œë?˜ì§€ ì•Šì?€ ìƒ?íƒœ)
		//		1 : requestì¤€ë¹„(open methodëŠ” í˜¸ì¶œë?˜ì˜€ì§€ë§Œ send methhodë¡œ ì§ˆë¬¸ì?´ ì†¡ì‹ ë?˜ì§€ ì•Šì?€ ìƒ?íƒœ)
		//		2 : ì§ˆì?˜ì™„ë£Œ(send method ë¡œ ì§ˆì?˜ëŠ” ì†¡ì‹ ë?˜ê³  ë´‰ì‚¬ê¸°ë¡œ ë¶€í„° ì?‘ë‹µì?„ ê¸°ë‹¤ë¦¬ê³  ìžˆëŠ” ìƒ?íƒœ)
		//		3 : ìˆ˜ì‹ ì¤‘(ë´‰ì‚¬ê¸°ë¡œ ë¶€í„° ì?‘ë‹µì?„ ìˆ˜ì‹ í•˜ê³  ìžˆëŠ” ìƒ?íƒœ. ì?´ ë‹¨ê³„ì—?ì„œëŠ” ìˆ˜ì‹ í•œ ìž?ë£Œë¥¼ ì·¨ê¸‰í• ìˆ˜ëŠ” ì—†ë‹¤)
		//		4 : ìˆ˜ì‹ ì™„ë£Œ(ë´‰ì‚¬ê¸°ë¡œ ë¶€í„° ëª¨ë“  ì?‘ë‹µì?„ ìˆ˜ì‹ í•œ ìƒ?íƒœ.)
		// status : http protocolì—?ì„œ ë¦¬ìš©ë?˜ëŠ” ì?‘ë‹µì½”ë“œ.
		// ì¦‰	200 : ì •ìƒ?, 401 : unauthorised, 403 : Forbidden, 404 : Not Found, 500 : Internal Sever Error.
		// http2Obj.status(ì?‘ë‹µì½”ë“œ), http2Obj.statusText(ì?‘ë‹µë©”ì„¸ì§€. ë¶€ë?¼ìš°ì €ì—? ë”°ë?¼ ì?´ ê°’ì?´ undefindì?¼ìˆ˜ë?„)
		if ( http2Obj.readyState == 4 ) {
			//clearInterval( timerId);
			if ( http2Obj.status == 200 ) {
				functionReference( http2Obj.responseText );
			} else {
				alert( http2Obj.status + ':' + http2Obj.statusText );
				return false;
			}
		}
	}

	// GETì?¸ ê²½ìš°ì—?ëŠ” ë´‰ì‚¬ê¸°ì—? ë³´ë‚´ëŠ” ìž?ë£Œê°€ ì—†ë‹¤. POSTì?¸ ê²½ìš° ì?¸ìˆ˜ë¥¼ ë¦¬ìš©í•˜ì—¬ ë´‰ì‚¬ê¸°ì—? ë³´ë‚¼ ìž?ë£Œë¥¼ ì •ì?˜.
	http2Obj.send(null);
}

//ì½¤ë³´ë³µìŠ¤ì—? ì„œë²„ì—?ì„œ ë³´ë‚´ì˜¨ ì •ë³´ë¥¼ í˜„ì‹œ
function server_requerst ( target_url, obj ) {

	var funcRef = function( msg ) {
		var array_list = msg.split("#");
		var count = array_list.length-1;

		//ì?´ë¯¸ ë“¤ì–´ê°€ ìžˆë?˜ ë‚´ìš©ì?„ ì‚­ì œí•˜ê³ 
		var optgroups = obj.childNodes;
		for(i = optgroups.length - 1 ; i >= 0 ; i--)
		{
			obj.removeChild(optgroups[i]);
		}

		//ìƒˆ í•­ëª©ì?„ ì¶”ê°€í•œë‹¤
		//ë¦¬ìŠ¤íŠ¸ë³µìŠ¤ì?˜ ì²˜ì?Œ ëž€ì?€ ë¹„ì—¬ìžˆì–´ì•¼ í•¨
		var new_node = document.createElement("option");
		
		try {
			obj.add(new_node, null); // standards compliant; doesn't work in IE
		}
		catch(ex) {
			obj.add(new_node); // IE only
		}

		new_node.text = '';
		new_node.value = 0;

		for (i=0; i<count; i++) {
			var new_node = document.createElement("option");

			var tmp_array_list =  array_list[i].split("|");
			var id = tmp_array_list[0];
			var val = tmp_array_list[1];

			//ì˜µì…˜í•œê°œ ì¶”ê°€
			try {
				obj.add(new_node, null); // standards compliant; doesn't work in IE
			}
			catch(ex) {
				obj.add(new_node); // IE only
			}
			new_node.text = val;
			new_node.value = id;
		}
	}
	httpRequest( target_url, funcRef );
}

//****************************************************
//*********** POSTë°©ì‹?ìœ¼ë¡œ ì „ì†¡í•˜ê¸°
//****************************************************

function newXMLHTTP() {
	if(window.XMLHttpRequest) {
		try {
			xmlhttp = new XMLHttpRequest();
		} catch(e) {
			alert("XMLHTTPë¥¼ ì´ˆê¸°í™”í•  ìˆ˜ì—†ìŠµë‹ˆë‹¤.");
			return false;
		}
	} else if(window.ActiveXObject) {
		try {
			xmlhttp = new ActiveXObject("Msxml2.XMLHTTP");
		} catch(e) {
			try {
				xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
			} catch(e) {
				alert("XMLHTTPë¥¼ ì´ˆê¸°í™”í• ìˆ˜ ì—†ìŠµë‹ˆë‹¤.");
				return false;
			}
		}
	} else {
		alert("XMLHTTPë¥¼ ì´ˆê¸°í™”í• ìˆ˜ ì—†ìŠµë‹ˆë‹¤.");
		return false;

	}
	return xmlhttp;
}

function postForm(obj, callback) {
	// XMLHTTP ê°?ì²´ ìƒ?ì„±
	var xmlhttp = newXMLHTTP();
	if(!xmlhttp) return false;

	var child = obj.elements;
	var data = new Array();
	for(i = 0; i < child.length;i++) {

		//í?¼ ê´€ë ¨ íƒœê·¸ê°€ ì•„ë‹Œ ê²½ìš° ë¬´ì‹œ
		if(child[i].tagName != "INPUT" && child[i].tagName != "TEXTAREA" && child[i].tagName != "SELECT") continue;

		//button ë¬´ì‹œ
		if(child[i].type == "submit" || child[i].type == "button" || child[i].type == "reset") continue;

		//CHECK, RADIOë‹¨ì¶” ì²˜ë¦¬
		if((child[i].type == "radio" || child[i].type == "checkbox") && !child[i].checked) continue;

		//text,password typeì?˜ inputì?´ë‚˜ selectì—?ì„œ required="required"ì?¼ë•Œ valueê°€ ì—†ìœ¼ë©´ ì˜¤ìœ 
		if(child[i].getAttributeNode("required") && !child[i].value) {
			child[i].style.backgroundColor = "#FF9";
			child[i].focus();
			alert("í•´ë‹¹ í•­ëª©ì?˜ ê°’ì?´ ì—†ê±°ë‚˜ ìž˜ëª»ë?˜ì˜€ìŠµë‹ˆë‹¤.");
			return false;
		}

	   	data.push ( child[i].name+"="+child[i].value);

	}

	senddata = data.join("&");

	xmlhttp.open("POST", obj.action,true);
	xmlhttp.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
	xmlhttp.send(senddata);

	xmlhttp.onreadystatechange = function() {
		if(xmlhttp.readyState == 4) {
			if(xmlhttp.status == 200) {
				callback(xmlhttp); //ì½œë°± í•¨ìˆ˜ë¡œ ìˆ˜ì‹ 
			} else {
				alert("ìž?ë£Œ ì „ì†¡ì¤‘ ì˜¤ë¥˜ê°€ ë°œìƒ?í–ˆìŠµë‹ˆë‹¤:\r\n\r\n"+xmlhttp.status+" "+xmlhttp.statusText);
			}
		}
	}
}
